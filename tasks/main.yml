---
- name: Download the OVA image of ManageIQ
  get_url:
    url: "{{ ova_url }}"
    dest: /tmp/manageiq.ova
  register: downloaded

- name: Create a directory for extract the OVA image
  file:
    path: /tmp/manageiq/
    state: directory

- name: Extract the qcow image from OVA
  unarchive:
    src: /tmp/manageiq.ova
    dest: /tmp/manageiq
    remote_src: true
  when: downloaded.changed

- name: Find the name of the qcow image
  find:
    paths: "/tmp/manageiq/images/"
    patterns: "^[^\\.]+$"
    file_type: file
    recurse: true
    use_regex: true
  register: image_path
  failed_when: image_path.matched == 0

- name: Login to oVirt engine
  ovirt_auth:
    username: "{{ ovirt_user }}"
    password: "{{ ovirt_password }}"
    url: "{{ ovirt_url }}"
    ca_file: "{{ ovirt_ca }}"

- name: Deploy the qcow image to oVirt engine
  ovirt_disks:
    auth: "{{ ovirt_auth }}"
    name: "{{ vm_name }}_disk"
    interface: virtio
    size: "{{ disk_size}}"
    format: cow
    image_path: "{{ image_path.files[0].path }}"
    storage_domain: "{{ disk_storage_domain }}"
  register: ovirt_disk

- name: Create virtual machine for the ManageIQ
  ovirt_vms:
    auth: "{{ ovirt_auth }}"
    name: "{{ vm_name }}"
    cluster: "{{ vm_cluster }}"
    memory: "{{ vm_memory }}"
    cpu_cores: "{{ vm_cpu }}"
    operating_system: rhel_7x64
    type: server
    disks:
      - id: "{{ ovirt_disk.id }}"
        bootable: true
    nics: "{{ vm_nics }}"
    cloud_init: "{{ vm_cloud_init }}"
    cloud_init_nics: "{{ vm_cloud_init_nics }}"

- name: Logout from oVirt engine
  ovirt_auth:
    state: absent
    ovirt_auth: "{{ ovirt_auth }}"
  tags:
    - always